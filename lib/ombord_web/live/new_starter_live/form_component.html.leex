<h2><%= @title %></h2>

<%= f = form_for @changeset, "#",
  id: "user-form",
  phx_target: @myself,
  phx_change: "validate",
  phx_submit: "save" %>

  <%= label f, :first_name %>
  <%= text_input f, :first_name, phx_debounce: "blur" %>
  <%= error_tag f, :first_name %>

  <%= label f, :last_name %>
  <%= text_input f, :last_name %>
  <%= error_tag f, :last_name %>

  <%= label f, :email %>
  <%= email_input f, :email, required: true %>
  <%= error_tag f, :email %>

  <%# For the password we explicitly set its value as Phoenix clears this value on form errors %>
  <%# This means an error on an unrelated field will clear this field. On a standard web form this %>
  <%# isn't generally an issue but Live View forms report errors in real time, for example field length %>
  <%# errors. In which case this field keeps getting cleared. %>

  <%= label f, :password %>
  <%= password_input f, :password, required: true, value: Ecto.Changeset.get_change(@changeset, :password)%>
  <%= error_tag f, :password %>

  <%= inputs_for f, :pack, fn p -> %>

    <%= label p, :role %>
    <%= text_input p, :role %>
    <%= error_tag p, :role %>

    <%= label p, :team_leader %>
    <%= text_input p, :team_leader %>
    <%= error_tag p, :team_leader %>

    <%= label p, :probationary_review_date %>
    <%= date_input p, :probationary_review_date %>
    <%= error_tag p, :probationary_review_date %>

    <%= label p, :start_date %>
    <%= date_input p, :start_date %>
    <%= error_tag p, :start_date %>

  <% end %>

  <%= submit "Save", phx_disable_with: "Saving..." %>
</form>
